<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="uk.ac.sheffield.com1003.cafe.TestPlaceAndServeOrder" tests="1" skipped="0" failures="1" errors="0" timestamp="2024-03-13T15:37:52" hostname="dyn098145.shef.ac.uk" time="0.001">
  <properties/>
  <testcase name="placeAndServeOrder" classname="uk.ac.sheffield.com1003.cafe.TestPlaceAndServeOrder" time="0.001">
    <failure message="uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException" type="uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException">uk.ac.sheffield.com1003.cafe.exceptions.CafeOutOfCapacityException
	at uk.ac.sheffield.com1003.cafe.Cafe.serveOrder(Cafe.java:202)
	at uk.ac.sheffield.com1003.cafe.TestPlaceAndServeOrder.placeAndServeOrder(TestPlaceAndServeOrder.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:299)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:293)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
